---
# vbr_console_install tasks file for veeamhub.veeam_vas
- name: Checking OS for pending reboots
  pending_reboot_check:
  register: precheck
- name: Is there an existing pending reboot?
  ansible.builtin.fail:
    msg: "This Windows server requires a reboot prior to beginning the Veeam Backup & Replication install. After rebooting this server, you can proceed with the installation."
  when:
    - precheck.pending_reboot | bool
- name: Including version-specific variables
  ansible.builtin.include_vars:
    file: "vars/vbr_v{{ version }}.yml"
- name: VBR ISO Tasks
  ansible.builtin.include_tasks: mount_iso.yml

# Determining if VBR Console can be installed (only 12.1 and later)
- name: Looking for 'Veeam.Silent.Install.exe' in Veeam ISO
  ansible.windows.win_find:
    paths: "{{ source }}Setup"
    patterns: Veeam.Silent.Install.exe
    recurse: true
    file_type: file
    use_regex: false
  register: file
- name: Determine version of 'Veeam.Silent.Install.exe'
  community.windows.win_file_version:
    path: "{{ file.files[0].path }}"
  register: file_version
  when: file.matched | bool
- name: Using Unsupported Version
  ansible.builtin.fail:
    msg: "Veeam Backup & Replication Console installation is only supported for version 12.1 and later. If an incorrect ISO was used, please correct and try again."
  when:
    - not file.matched | bool or file_version.win_file_version.file_version == '1.0.0.0'

# Print Installation Configuration
- name: Print Installation Configuration
  ansible.builtin.debug:
    msg:
      - "ISO Drive Letter: '{{ source }}'"
      - "Installation Logs Folder: '{{ destination }}logs'"
      - "Version: {{ version }}"
      - "Download ISO?: {{ iso_download }}"
      - "ISO Source: {{ iso_url }}"
      - "ISO File Destination: {{ destination }}{{ destination_iso_file }}"

# PRE-INSTALL TASKS
- name: Create silent install answer file
  ansible.builtin.template:
    src: templates/VBRConsole/VbrConsoleAnswerFile_install.xml.j2
    dest: "{{ destination }}VbrConsoleAnswerFile_install.xml"
    mode: '777'

# INSTALLING VEEAM SOFTWARE
- name: Install Veeam Backup & Replication Console
  ansible.windows.win_package:
    path: "{{ source }}Setup\\Silent\\Veeam.Silent.Install.exe"
    state: present
    arguments: '/AnswerFile "{{ destination }}VbrConsoleAnswerFile_install.xml" /SkipNetworkLogonErrors /LogFolder "{{ destination }}logs"'
  async: 3600
  poll: 0
  register: async_result
- name: Check on install status
  ansible.builtin.async_status:
    jid: "{{ async_result.ansible_job_id }}"
  register: async_poll_results
  until: async_poll_results.finished
  retries: 60
  delay: 60

# POST-INSTALL TASKS
- name: Unmount ISO
  community.windows.win_disk_image:
    image_path: "{{ destination }}{{ destination_iso_file }}"
    state: absent
- name: Installation Complete! Checking OS for pending reboots
  pending_reboot_check:
  register: postcheck
- name: Rebooting server if necessary
  ansible.windows.win_reboot:
    msg: Reboot initiated by Ansible to complete VBR install
  when: postcheck.pending_reboot | bool
