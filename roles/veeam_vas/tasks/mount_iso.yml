---
# mount_iso tasks file for veeamhub.veeam_vas

## Downloading ISO (if necessary)
- name: Create download directory
  ansible.windows.win_file:
    path: "{{ destination }}"
    state: directory
  when: iso_download | bool
- name: Download ISO
  ansible.windows.win_get_url:
    url: "{{ iso_url }}"
    dest: "{{ destination }}{{ destination_iso_file }}"
    checksum: "{{ iso_checksum }}"
    checksum_algorithm: sha256
    force: true
  when: iso_download | bool
  register: win_get_url_out
- name: Debug Download Result
  debug:
    var: win_get_url_out
  when: iso_download | bool
- name: Clearing 'iso_url' variable as it isn't needed
  set_fact:
    iso_url: "not specified"
  when: not iso_download | bool

## Mounting ISO
- name: Mount ISO
  community.windows.win_disk_image:
    image_path: "{{ destination }}{{ destination_iso_file }}"
    state: present
  register: disk_image_out
- name: Set ISO Drive Letter
  set_fact:
    source: "{{ disk_image_out.mount_paths[0] }}"
- name: "Obtain version information about '{{ source }}Setup.exe' (v11-)"
  community.windows.win_file_version:
    path: "{{ source }}Setup.exe"
  register: iso_version
  when: version | int <= 11
- name: "Does the ISO version ({{ iso_version.win_file_version.file_major_part }}) match the version specified in the playbook ({{ version }})?"
  fail:
    msg: "Please either specify the correct 'version' in your playbook or the correct ISO to be used. Halting Ansible now as this can cause adverse effects."
  when:
    - version | int <= 11
    - version != iso_version.win_file_version.file_major_part
    - not skip_iso_check | bool
- name: "Obtain version information from '{{ source }}autorun.inf' (v12+)"
  ansible.windows.win_shell: "Get-Content {{ source }}autorun.inf"
  register: iso_version
  when: version | int >= 12
- name: "Does the ISO version match the version specified in the playbook ({{ version }})?"
  fail:
    msg: "Please either specify the correct 'version' in your playbook or the correct ISO to be used. Halting Ansible now as this can cause adverse effects."
  when:
    - version | int >= 12
    - iso_version.stdout.find(version) == -1 # looking for version number in autorun.inf
    - not skip_iso_check | bool
